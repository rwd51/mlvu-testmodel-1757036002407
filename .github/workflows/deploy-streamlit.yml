name: 🚀 Deploy to Streamlit Cloud

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🔍 Validate Streamlit App
      run: |
        python -c "import streamlit as st; print('✅ Streamlit import successful')"
        python -m py_compile streamlit_app.py
        echo "✅ Streamlit app validation passed"

    - name: 🚀 Deployment Complete
      run: |
        echo "🎯 TestModel deployed to Streamlit Cloud!"
        echo "📱 App URL: https://share.streamlit.io/rwd51/mlvu-testmodel-1757036002407/main/streamlit_app.py"
        echo "🔗 Alt URL: https://rwd51-mlvu-testmodel-1757036002407-streamlit-app-main.streamlit.app"

    - name: 📝 Create Deployment Comment
      uses: actions/github-script@v7
      with:
        script: |
          const streamlitUrl = 'https://share.streamlit.io/rwd51/mlvu-testmodel-1757036002407/main/streamlit_app.py';
          const altUrl = 'https://rwd51-mlvu-testmodel-1757036002407-streamlit-app-main.streamlit.app';

          const { data: commits } = await github.rest.repos.listCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 1
          });

          if (commits.length > 0) {
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: commits[0].sha,
              body: `🎉 **Streamlit App Deployed!**\n\n` +
                    `🚀 **Launch App**: [${streamlitUrl}](${streamlitUrl})\n` +
                    `🔗 **Alternative**: [${altUrl}](${altUrl})\n\n` +
                    `⏱️ App is live and ready to use!`
            });
          }
